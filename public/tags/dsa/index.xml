<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dsa on smk&#39;s Blogs</title>
    <link>http://example.org/tags/dsa/</link>
    <description>Recent content in Dsa on smk&#39;s Blogs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Apr 2021 16:01:25 +0530</lastBuildDate>
    
	<atom:link href="http://example.org/tags/dsa/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>1. Fundamentals</title>
      <link>http://example.org/1-Fundamentals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/1-Fundamentals/</guid>
      <description> Fundamentals </description>
    </item>
    
    <item>
      <title>2. Data Structure</title>
      <link>http://example.org/2-Data_Structures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/2-Data_Structures/</guid>
      <description> Data Structures 3-Elementary Data Structure4-Abstract Data Structures5-Recursion and Trees</description>
    </item>
    
    <item>
      <title>3. Sorting</title>
      <link>http://example.org/3-Sorting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/3-Sorting/</guid>
      <description> Sorting 6-Elementary Sorting Methods7-Quicksort8-Merging and Mergesort9-Priority Queues and Heapsort10-Radix Sorting11-Special Purpose Sorting Methods</description>
    </item>
    
    <item>
      <title>4. Searching</title>
      <link>http://example.org/4-Seaching/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/4-Seaching/</guid>
      <description> Searching 12-Symbol Tables and Binary Search13-Balanced Trees14-Hashing15-Radix Search16-External Sorting</description>
    </item>
    
    <item>
      <title>5. Graph Algorithms</title>
      <link>http://example.org/5-Graph_Algorithms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/5-Graph_Algorithms/</guid>
      <description> Graph Algorithms 17-Graph Properties and Types18-Graph Search19-Digraphs and DAGs20-MSTs21-Shortest Paths22-Network Flows</description>
    </item>
    
    <item>
      <title>6. Strings</title>
      <link>http://example.org/6-Strings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/6-Strings/</guid>
      <description> Strings 0-Introduction1-String Sorts2-Tries3-Substring Search4-Regular Expression5-Data Compression</description>
    </item>
    
    <item>
      <title>Problems : Basics 2</title>
      <link>http://example.org/Practice_Problems/</link>
      <pubDate>Mon, 12 Apr 2021 16:01:25 +0530</pubDate>
      
      <guid>http://example.org/Practice_Problems/</guid>
      <description> Problems on Theory SortingLinked ListsStacksQueuesLinked ListsBinary Search TreeBST ReviewTrees-1Trees-2</description>
    </item>
    
    <item>
      <title>Problems : DP</title>
      <link>http://example.org/Practice_DP/</link>
      <pubDate>Wed, 21 Apr 2021 09:51:25 +0530</pubDate>
      
      <guid>http://example.org/Practice_DP/</guid>
      <description> Problems on Dynamic Programming DP 1DP 2DP 3DP 4DP 5</description>
    </item>
    
    <item>
      <title>Problems : Graphs</title>
      <link>http://example.org/Practice_Graphs/</link>
      <pubDate>Sat, 24 Apr 2021 10:24:25 +0530</pubDate>
      
      <guid>http://example.org/Practice_Graphs/</guid>
      <description> Problems on Graphs Graphs 1Graphs 2</description>
    </item>
    
    <item>
      <title>DP 1</title>
      <link>http://example.org/Practice_DP/DP_1/</link>
      <pubDate>Wed, 21 Apr 2021 09:51:25 +0530</pubDate>
      
      <guid>http://example.org/Practice_DP/DP_1/</guid>
      <description>This is long sections divided into 3 parts. Its very important for interviews.
In recursion we say subproblems were related to the original problems does they always have to be ? Should they be in recurrence relation to each other.
Sometimes we do not need to do that necessarily.
What Dynamic Programming is =&amp;gt; DnC ( divide and conquer) + something extra &amp;hellip;
what this extra is ?
Climbing Stairs :</description>
    </item>
    
    <item>
      <title>Graphs 1</title>
      <link>http://example.org/Practice_Graphs/Graphs_1/</link>
      <pubDate>Sat, 24 Apr 2021 10:24:25 +0530</pubDate>
      
      <guid>http://example.org/Practice_Graphs/Graphs_1/</guid>
      <description>Why we use graphs Graphs help us model a specific type of data that has some dependency and relationships.
Eg. Facebooks friends data, Routes between cities and places (models the connectivity and distance) , Networking (connectivity), Pre-requisite of courses (knowledge and dependency), File Systems, Resource Allocation in OS (handling deadlocks).
Representation of Graphs Represented as a Nodes and edges. Nodes : data while edge represents relationships.
Most Simplest implementation is adjacency matrix but its not memory efficient for sparse graphs.</description>
    </item>
    
    <item>
      <title>Graphs 2</title>
      <link>http://example.org/Practice_Graphs/Graphs_2/</link>
      <pubDate>Sat, 24 Apr 2021 23:01:25 +0530</pubDate>
      
      <guid>http://example.org/Practice_Graphs/Graphs_2/</guid>
      <description>Strong and Weak Connectivity These terms arise in Directed Graph.
Weak Connectivity : Take a directed graph and convert into undirected graph and do connectivity operations on that is called as weak connectivity.
Strong Connectivity : (A,B) are strongly connected $\iff \exist $ path b/w A &amp;amp; B.
â€‹ A &amp;ndash;&amp;gt; B and B&amp;ndash;&amp;gt;A
Graph Cyclicity Cycle : A sequence of nodes and edges such that first and last node of sequence is same.</description>
    </item>
    
  </channel>
</rss>